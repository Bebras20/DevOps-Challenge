name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  Linting:
    runs-on: ubuntu-latest
    name: Checks
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - run: pip install --upgrade pip
    - run: pip install "black<23" pylint mypy types-redis types-tornado
    - run: black hello.py

    - run: pylint --disable=all --enable=unused-import $(git ls-files 'hello.py')

  infra_build:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
  
      - name: Building
        run: docker-compose build 

  integration_test:
   runs-on: ubuntu-latest
 
   steps:
     - name: Checkout code
       uses: actions/checkout@v2
 
     - name: Power up the Infra
       run: docker-compose up -d
     - name: Set up Python 3.7
       uses: actions/setup-python@v2
       with:
         python-version: 3.7
     - name: Install integration testing requirements
       run: pip install "tornado" "redis"
     
     - name: Integration Testing
       run: |
        export $(cat .env | xargs)
        python3 -c "from hello import MainHandler; exec(open('tests/test.py').read())"
        
# code_coverage:
#   runs-on: ubuntu-latest
# 
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
# 
#     - name: Code Coverage
#       run: docker-compose run app <code_coverage_command>
# 
# container_scan:
#   runs-on: ubuntu-latest
# 
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
# 
#     - name: Pushing to Registry
#       run: docker-compose push
# 
#     - name: Container Scan
#       run: docker scan --severity <scan_severity> <image_name>
# 
# deploy:
#   runs-on: ubuntu-latest
# 
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
# 
#     - name: Deployment
#       run: docker-compose up -d
