name: CI/CD

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    name: Checks
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - run: pip install --upgrade pip
    - run: pip install "black<23" pylint==v3.0.0a3 mypy==v0.902
    - run: black --diff --check $(git ls-files '*.py')
    - run: pylint --disable=all --enable=unused-import $(git ls-files '*.py')
    - run: mypy --strict $(git ls-files '*.py')
# Uncomment and customize the following sections as needed

# build:
#   runs-on: ubuntu-latest
# 
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
# 
#     - name: Building
#       run: docker-compose build
# 
# unit_test:
#   runs-on: ubuntu-latest
# 
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
# 
#     - name: Unit Testing
#       run: docker-compose run app <unit_test_command>
# 
# integration_test:
#   runs-on: ubuntu-latest
# 
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
# 
#     - name: Integration Testing
#       run: docker-compose run app <integration_test_command>
# 
# code_coverage:
#   runs-on: ubuntu-latest
# 
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
# 
#     - name: Code Coverage
#       run: docker-compose run app <code_coverage_command>
# 
# container_scan:
#   runs-on: ubuntu-latest
# 
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
# 
#     - name: Pushing to Registry
#       run: docker-compose push
# 
#     - name: Container Scan
#       run: docker scan --severity <scan_severity> <image_name>
# 
# deploy:
#   runs-on: ubuntu-latest
# 
#   steps:
#     - name: Checkout code
#       uses: actions/checkout@v2
# 
#     - name: Deployment
#       run: docker-compose up -d
